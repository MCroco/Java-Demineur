package first;

import java.awt.Color;
import java.awt.EventQueue;
import java.awt.Font;
import java.awt.Frame;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Timer;
import java.util.TimerTask;

import javax.swing.BorderFactory;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JSplitPane;
import javax.swing.JTextField;

import java.awt.Cursor;
import javax.swing.SwingConstants;



public class GUI2 extends JFrame{
	private JTextField txtChrono;
	int etat=0;


		  public GUI2(Tableau tab, int k, int l, int m){
		  	setBackground(Color.ORANGE);
		  	
		  	
		  			  
		    int a=k;		  
		    int b=l;
		    
		    JPanel panel = new JPanel();
		    JButton[][] tabBoutons = new JButton[a][b];
		    //tabBoutons = caseDev(tab, a, b);
		    tabBoutons = caseDev(tab, a, b).clone();
		    JButton[][] tabCaseDev = new JButton[a][b];
		    for(int i=0; i<k; i++) {
			    for(int j=0;j<l;j++) {
			    	tabCaseDev[i][j] = tabBoutons[i][j] ;
			    }
    		}
		    
		  

		    this.setTitle("Démineur");

		    this.setSize(a*77,b*46);

		    this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

		    this.setLocationRelativeTo(null);
		    GridBagLayout gridBagLayout = new GridBagLayout();
		    gridBagLayout.columnWidths = new int[]{0, 0};
		    gridBagLayout.rowHeights = new int[]{0, 0};
		    gridBagLayout.columnWeights = new double[]{1.0, Double.MIN_VALUE};
		    gridBagLayout.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		    getContentPane().setLayout(gridBagLayout);
		    
		    JSplitPane splitPane = new JSplitPane();
		    splitPane.setOrientation(JSplitPane.VERTICAL_SPLIT);
		    GridBagConstraints gbc_splitPane = new GridBagConstraints();
		    gbc_splitPane.fill = GridBagConstraints.BOTH;
		    gbc_splitPane.gridx = 0;
		    gbc_splitPane.gridy = 0;
		    getContentPane().add(splitPane, gbc_splitPane);
		    
		    JSplitPane splitPane_1 = new JSplitPane();
		    splitPane.setLeftComponent(splitPane_1);
		    
		    JSplitPane splitPane_2 = new JSplitPane();
		    splitPane_1.setRightComponent(splitPane_2);
		    
		    JSplitPane splitPane_3 = new JSplitPane();
		    splitPane_2.setRightComponent(splitPane_3);
		    
		    JButton btnNewButton_2 = new JButton("expert");
		    btnNewButton_2.setForeground(Color.BLACK);
		    btnNewButton_2.setFont(new Font("Tahoma", Font.BOLD, 11));
		    btnNewButton_2.setBackground(Color.GRAY);
		    splitPane_3.setLeftComponent(btnNewButton_2);
		    btnNewButton_2.addActionListener(new ActionListener() {
				
				@Override
				public void actionPerformed(ActionEvent e) {
					
					Tableau tab = new Tableau(30, 50, 250);
					System.out.println(tab);
					EventQueue.invokeLater(new Runnable() {
						public void run() {
							try {
								GUI2 frame = new GUI2(tab,30 ,50 ,250);
								frame.setVisible(true);
							} catch (Exception e) {
								e.printStackTrace();
							}
						}
					});
					
				}
			});
		    
		    JSplitPane splitPane_4 = new JSplitPane();
		    splitPane_3.setRightComponent(splitPane_4);
		    
		    JButton btnNewButton_3 = new JButton("start/stop");
		    btnNewButton_3.setForeground(Color.YELLOW);
		    btnNewButton_3.setBackground(Color.GRAY);
		    splitPane_4.setRightComponent(btnNewButton_3);
		    
		    
		    txtChrono = new JTextField();
		    txtChrono.setDisabledTextColor(Color.BLACK);
		    txtChrono.setHorizontalAlignment(SwingConstants.CENTER);
		    splitPane_4.setLeftComponent(txtChrono);
		    txtChrono.setFont(new Font("Tahoma", Font.BOLD, 12));
		    txtChrono.setForeground(Color.RED);
		    txtChrono.setBackground(Color.BLACK);
		    txtChrono.setColumns(10);
		    txtChrono.setText("0:0:0000");
		    
		    JButton btnNewButton_1 = new JButton("moyen");
		    btnNewButton_1.setForeground(Color.BLACK);
		    btnNewButton_1.setFont(new Font("Tahoma", Font.BOLD, 11));
		    btnNewButton_1.setBackground(Color.GRAY);
		    splitPane_2.setLeftComponent(btnNewButton_1);
		    btnNewButton_1.addActionListener(new ActionListener() {
				
				@Override
				public void actionPerformed(ActionEvent e) {
					
					Tableau tab = new Tableau(20, 30, 40);
					System.out.println(tab);
					EventQueue.invokeLater(new Runnable() {
						public void run() {
							try {
								GUI2 frame = new GUI2(tab,20,30,40);
								frame.setVisible(true);
							} catch (Exception e) {
								e.printStackTrace();
							}
						}
					});
					
				}
			});
		    
		    JButton btnNewButton = new JButton("facile");
		    btnNewButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));		  
		    btnNewButton.setFont(new Font("Tahoma", Font.BOLD, 11));
		    btnNewButton.setForeground(Color.BLACK);
		    btnNewButton.setBackground(Color.GRAY);
		    btnNewButton.addActionListener(new ActionListener() {
				
				@Override
				public void actionPerformed(ActionEvent e) {
					

					Tableau tab = new Tableau(10, 15, 10);
					System.out.println(tab);

					EventQueue.invokeLater(new Runnable() {
						public void run() {
							try {
								GUI2 frame = new GUI2(tab, 10, 15, 10);
								frame.setVisible(true);
							} catch (Exception e) {
								e.printStackTrace();
							}
						}
					});
					
				}
			});

		    splitPane_1.setLeftComponent(btnNewButton);
		    
		    
		    panel.setBackground(Color.WHITE);
		    splitPane.setRightComponent(panel);
		    panel.setLayout(new GridLayout(a, b));
		    ButtonGroup group = new ButtonGroup();
		    
		    
		    btnNewButton_3.addActionListener(new ActionListener() {
		    	public void actionPerformed(ActionEvent e) {
		    		for(int i=0; i<k; i++) {
					    for(int j=0;j<l;j++) {
					    	tabCaseDev[i][j].setEnabled(true);
					    	
					    }
		    		}
		    		txtChrono.setText("");
		    		System.out.println("bouton start pressé");
		    		
				    Timer chrono = new Timer();
				    
				    if(etat==0) {
				    	etat=1;
				    	System.out.println("je suis dans 0");
				    	chrono.schedule(new TimerTask() {
					    	
				    		
					    	
					    	int milli=0;
					    	int seconde = 0;
					    	int minute = 0;	
					    	
					    	
							
							public void run() {
								
								if(milli==1000) {
									milli=0;
									seconde++;
								}
								else if(seconde==60) {
									minute++;
									seconde=0;
								}
								else {
									txtChrono.setText(minute+":"+seconde+":"+milli);
									milli++;
								}
							}
							
						}, 1, 1);
				    	
				    }
				    else if(etat==1){
				    	System.out.println("je suis dans 1");
				    	chrono.cancel();
				    	chrono.purge();
				    	txtChrono.setText("0:0:0000");
				    	etat=0;
				    }
				    System.out.println(etat);

		    	}
		    });
		    
		    for(int i=0; i<k; i++) {
			    for(int j=0;j<l;j++) {
			    	
			    	panel.add(tabCaseDev[i][j]);
			    }
    		}
		    
		   
		    
		    
		    /**for(int i=0; i<a; i++) {
			    for(int j=0;j<b;j++) {
			    	String temp = ""+i+";"+j;
			    	JButton btn = new JButton("");

			    	 tabBoutons [i][j] = btn;
			    	// group.add(btn);
			    	 btn.setBackground(Color.GRAY);
			    	 btn.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));	
			    	 btn.setBorder(BorderFactory.createLineBorder(Color.black));
			         btn.setText("");
			         btn.setEnabled(false);
			         btn.setName(temp);
			         btn.setBounds(i*75, j*40, 75, 40);
			         panel.add(btn);
			        

			         btn.addActionListener(new ActionListener() {
						
						@Override
						public void actionPerformed(ActionEvent e) {
							String cooCase = btn.getName();
							btn.setForeground(Color.RED);
							String[] coo = cooCase.split(";");	
							System.out.println(btn.getName());
							
							if(tab.getCase(Integer.parseInt(coo[0]), Integer.parseInt(coo[1])).equals("0")) {
								btn.setText("");
								btn.setBackground(Color.WHITE);

								
							}
							else {
								btn.setForeground(Color.RED);
								btn.setText(tab.getCase(Integer.parseInt(coo[0]), Integer.parseInt(coo[1])));
								btn.setBackground(Color.WHITE);

							}
							btn.setEnabled(false);						
						}
					} );
			    	
			    }
		    }**/

		  }  
		  
		  public JButton[][] caseDev(Tableau tab, int a, int b){
			  JButton[][] tabCaseDev = new JButton[a][b];
			  for(int i=0; i<a; i++) {
				    for(int j=0;j<b;j++) {
				    	String temp = ""+i+";"+j;
				    	JButton btn = new JButton("");
				    	 
				    	 tabCaseDev [i][j] = btn;
				    	// group.add(btn);
				    	 btn.setBackground(Color.GRAY);
				    	 btn.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));	
				    	 btn.setBorder(BorderFactory.createLineBorder(Color.black));
				         btn.setText("");
				         btn.setEnabled(false);
				         btn.setName(temp);
				         btn.setBounds(i*75, j*40, 75, 40);
				         //panel.add(btn);
				        

				         btn.addActionListener(new ActionListener() {
							
							@Override
							public void actionPerformed(ActionEvent e) {
								String cooCase = btn.getName();
								btn.setForeground(Color.RED);
								String[] coo = cooCase.split(";");	
								System.out.println(btn.getName());
								
								if(tab.getCase(Integer.parseInt(coo[0]), Integer.parseInt(coo[1])).equals("0")) {
									btn.setText("");
									btn.setBackground(Color.WHITE);

									
								}
								else {
									btn.setForeground(Color.RED);
									btn.setText(tab.getCase(Integer.parseInt(coo[0]), Integer.parseInt(coo[1])));
									btn.setBackground(Color.WHITE);

								}
								btn.setEnabled(false);						
							}
						} );
				    	
				    }
			    }
			  
			  return tabCaseDev;
		  }
		  
	public static void main(String[] args) {
		Tableau tab = new Tableau(10, 15, 10);
		System.out.println(tab);
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					GUI2 frame = new GUI2(tab,10,15,10);
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}
}
